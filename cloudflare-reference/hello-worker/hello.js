async function handleRequest(event) {
  const {request} = event
  const kvKey = 'hello';
  const kvValue = await KV_CF_HELLO.get(kvKey);
  let html = `
  <h1>Hello World</h1>
  <p>This markup was generated by a Cloudflare Worker.</p>
  <p>a kv. key: ${kvKey}, value:${kvValue} </p>`;

  const kvDebugLoggingKey = 'debug_output_enabled';
  const debugLoggingEnabled = await KV_CF_HELLO.get(kvkvDebugLoggingKeyKey);

  if (debugLoggingEnabled === 'true') {
    const { pathname } = new URL(event.request.url)
    const cf = event.request.cf !== undefined ? event.request.cf : {}
    const headers = new Map(event.request.headers)
    const debugInfo = {
      battlesnake: BATTLESNAKE_NAME, // eslint-disable-line
      battlesnake_version: BATTLESNAKE_VERSION, // eslint-disable-line
      req_method: event.request.method,
      req_pathname: pathname,
      req_lat: cf.latitude,
      req_lon: cf.longitude,
      req_continent: cf.continent,
      req_country: cf.country,
      req_region: cf.region,
      req_city: cf.city,
      req_timezone: cf.timezone,
      req_region_code: cf.regionCode,
      req_metro_code: cf.metroCode,
      req_postal_code: cf.postalCode,
      req_colo: cf.colo,
      req_cf_ray: headers.get('cf-ray')
    };

    html += `<pre>
${JSON.stringify(debugInfo, false, 2)}
</pre>`;
  }

  return new Response(html, {
    headers: {
      'content-type': 'text/html;charset=UTF-8',
    },
  });
}

addEventListener('fetch', event => {
  return event.respondWith(handleRequest(event));
});